@model BSA.Service.ServiceModel.SeedModel
@{
    ViewBag.Title = "CreateOrEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add New Seed</h2>
<hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 20px; border-width: 2px;" />
@using (Html.BeginForm("CreateOrEdit", "Seeds", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SeedCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SeedCategoryId, new SelectList(Model.Categories, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.SeedCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SeedTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SeedTypeId, new SelectList(Model.SeedTypes, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.SeedTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductNameBN, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProductNameBN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductNameBN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Remarks, 4, 51, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>

            <div class="panel-body">

                <div class="col-md-offset-6 col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-9">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            @*<input type="submit" value="@Model.Employee.ButtonName" onclick="javascript: return SubmitForm();" class="btn btn-info" />*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
