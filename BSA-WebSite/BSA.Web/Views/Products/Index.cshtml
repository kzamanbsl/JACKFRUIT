@*@model IEnumerable<Lib.Spacl.org.Model.Product>*@
@using PagedList.Mvc;
@model PagedList.IPagedList<Spacl.Lib.CustomModel.ProductModel>
@using PagedList;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-6">
            <h4><b>Product List</b></h4>
        </div>
        <div class="col-md-4">
            <div class="col-md-10">@Html.TextBox("searchText", null, new { @autocomplete = "off", @class = "form-control pull-right", @placeholder = "Search..." })</div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-success">Search&nbsp;<i class="fa fa-search"></i></button>
            </div>
        </div>
        <div class="col-md-2">
            <a href="@Url.Action("CreateOrEdit", new { id = 0 })" title="New Client" class="btn btn-primary pull-right">
                <span class="glyphicon glyphicon-user"></span> Add
            </a>
        </div>
    </div>
}
<hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 20px; border-width: 2px;" />

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ShortName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductImagePath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Remarks)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().IsActive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductCategory.ProductType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductSubCategory.Name)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShortName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductImagePath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remarks)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCategory.ProductType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductSubCategory.Name)
            </td>
            <td>

                @*<a href="@Url.Action("CreateOrEdit", new { id = item.ProductId })" title="Edit Case" class="btn btn-success btn-xs">
                    <i class="fa fa-pencil" style="font-size:15px;" aria-hidden="true"></i>View
                </a>
                <a href="@Url.Action("Details", new { id = item.ProductId })" title="Details of Case" class="btn btn-info btn-xs">
                    <i class="fa fa-eye" style="font-size:15px; color:darkgreen" aria-hidden="true"></i>Details
                </a>*@
                    @Html.ActionLink("Edit", "CreateOrEdit", new { id = item.ProductId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductId })
            </td>
        </tr>
    }
</table>
@if (Model.PageCount > 1)
{
    <span class="btn btn-success">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </span>
    <span class="checkbox">
        @Html.PagedListPager(Model, Page_No => Url.Action("Index", "Products",
                      new { Page_No, Sorting_Order = Request.QueryString["Search"] }))
    </span>
}
