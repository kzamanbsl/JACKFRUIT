@using KG.Core.Services
@{
    ViewData["Title"] = "Department";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model KGERP.Service.Implementation.Configuration.VMCommonDepartment

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        Department
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Department</li>
    </ol>
</section>

@using (Html.BeginForm("CommonDepartment", "Configuration", FormMethod.Post, new { id = "commonDepartmentFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-3">
                    <div class="box">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="box-danger">
                            @*<div class="box-header">
                                <h4>Add Department</h4>
                            </div>*@
                            <!-- /.box-header -->
                            <div class="box-body">

                                @Html.HiddenFor(model => model.ID, new { id = "DepartmentId" })
                                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })


                                <div class="form-group">
                                    <label for="message-text" class="col-form-label">Department Name:</label>
                                    @Html.TextBoxFor(model => model.Name, new { Style = "width:100%;", id = "txtDepartmentName", @class = "form-control input-sm ", @placeholder = "Department Name", required = "true", })
                                    @Html.ValidationMessageFor(model => model.Name, "", new {id= "nameExist", @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-5">
                                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                                    </div>
                                    <div class="col-md-7">
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>

                                    </div>
                                </div>
                            </div>

                            <div class="box-footer">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-9">
                    <div class="box">

                        <div class="box-danger">
                            <div class="box-header">
                                @*<h4>Department List</h4>*@
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <div class="table-responsive col-md-12">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>SL</th>
                                                <th>Name</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        @{int sl = 0;
                                        }
                                        <tbody>
                                            @foreach (var item in Model.DataList)
                                            {

                                                <tr>
                                                    <td>@(++sl)</td>
                                                    <td id="tdDepartmentName_@item.ID">@item.Name</td>

                                                    <td>
                                                        @if (Model.UserDataAccessModel.CanEdit)
                                                        {
                                                            <a id="@item.ID" onclick="makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                        }
                                                        @if (Model.UserDataAccessModel.CanDelete)
                                                        {
                                                            <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#departmentDeleteModal" title="Delete"
                                                               data-placement="top">
                                                                <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                            </a>
                                                        }
                                                            @*<a href="~/Configuration/CommonSubZone?companyId=@item.CompanyFK&zoneId=@item.ID" style="padding:0px 0px 0px 0px" class="btn btn-success btn-sm">Department</a>
            <a href="~/Configuration/CommonCustomer?companyId=@item.CompanyFK&zoneId=@item.ID&subZoneId=0" style="padding:0px 0px 0px 0px" class="btn btn-success btn-sm">Customer</a>*@

                                                        </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>

                            <div class="box-footer">
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </section>

}


@using (Html.BeginForm("CommonDepartment", "Configuration", FormMethod.Post, new { id = "commonDepartmentDeleteFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { Value = "", id = "departmentIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { Value = "", id = "CompanyFKDelete" })

    <div class="modal fade" id="departmentDeleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Department Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this department?</h3>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}



@section scripts {
    <script type="text/javascript">

        $(document.body).on("change", "#txtDepartmentName", function () {
            var unitId = $("#DepartmentId").val();
            if (unitId == null || unitId == "" || unitId == undefined) { unitId = 0 };
            var value = $(this).val();
            var param = { name: value, id: unitId ?? 0 };
            var url = "/Configuration/IsDepartmentNameExist";
            $.post(url, param, function (rData) {
                $('#nameExist').text("");
                if (rData === true) {
                    var msg = "Sorry, This " + value + " name already exist!";
                    $('#nameExist').text(msg);
                    return;
                }
            });
        });


        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();

        });

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#DepartmentId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#txtDepartmentName').val($('#tdDepartmentName_' + rowId).text().trim());


                window.scrollTo({ top: 0, behavior: 'smooth' });

            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#departmentIdDelete').val(id);
                $('#ActionIdDelete').val(3);
                $('#CompanyFKDelete').val("@Model.CompanyFK");

            }
        }
        function resetForm() {
            $('#commonDepartmentFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        }

    </script>
}





