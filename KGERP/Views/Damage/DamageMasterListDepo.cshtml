@model  KGERP.Service.ServiceModel.DamageMasterModel
@using KGERP.Utility;

@{
    ViewData["Title"] = "Dealer Damage List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        <span>
            Depo Damage List
        </span>

    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        @*<li class="active">
                <a href="~/Procurement/FoodCustomerSalesOrderSlave?companyId=@Model.CompanyFK&orderMasterId=0" class="btn btn-primary pull-right">
                    <span class="fs fs-plus"></span> New Sales Invoice
                </a>
            </li>*@
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-danger">
                    <div class="box-body">
                        @using (Html.BeginForm("DamageMasterSearchDepo", "Damage", FormMethod.Post, new { id = "depoDamageMasterListFormId", @class = "formValidator" }))
                        {
                            @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyId" })
                            @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("Status:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.DropDownListFor(model => model.StatusId, Model.EnumDamageStatusList as SelectList, "==Select Status==", new { id = "ddlStatusEnumFK", @class = "form-control ddlReset searchingDropdown", style = "width:100%", required = "required" })
                                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("From Date:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.StrFromDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("To Date:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.StrToDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3" style="padding: 0px 2px 0px 8px;">
                                    <div class="form-group">
                                        <label>&nbsp;</label>
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block">Show</button>
                                    </div>
                                </div>
                            </div>
                        }

                        <hr />

                        <div class="table-responsive">
                            <table id="KgErpDataTable" class="table table-striped" style="width:100%; background-color:#ddd;">
                                <thead>
                                    <tr>
                                        <th>SL</th>
                                        <th>Date</th>
                                        <th>Depo</th>
                                        <th>Store House</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                        <th>Change Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DataList)
                                    {
                                        #region Link Title

                                        string statusTitle = "";

                                        if (item.StatusId == EnumDamageStatus.Draft)
                                        { statusTitle = "Make Submit"; }

                                        if (item.StatusId == EnumDamageStatus.Submitted)
                                        { statusTitle = "Undo Submit"; }

                                        #endregion

                                        <tr>
                                            <th>@(++sl)</th>
                                            <td>@item.OperationDate.ToString("dd-MM-yyyy")</td>
                                            <td>@item.DeportName</td>
                                            <td>@item.StockInfoName</td>
                                            <td>@item.StatusName</td>
                                            <td>
                                                @if (item.StatusId == EnumDamageStatus.Draft || item.StatusId == EnumDamageStatus.Submitted)
                                                {
                                                    <a id="@item.DamageMasterId" onclick=" makeEditble(@item.DamageMasterId)" class="linkPointer" data-toggle="modal" data-target="#editDamageMasterModalDepo" title="Edit Master" data-placement="top"><i class="fa fa-edit" aria-hidden="true"></i></a>
                                                    <a id="@item.DamageMasterId" onclick="makeDeletale(@item.DamageMasterId)" class="linkPointer" data-toggle="modal" data-target="#deletedepoDamageModal" title="Delete" data-placement="top"><i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                                                    <a href="~/Damage/DamageMasterSlaveDepo?companyId=@item.CompanyFK&damageMasterId=@item.DamageMasterId" title="Details"><i class="glyphicon glyphicon-new-window"></i></a>
                                                }
                                                else if (item.StatusId == EnumDamageStatus.Received )
                                                {
                                                    <a href="~/Damage/DepoDamageReceivedSlave?companyId=@item.CompanyFK&damageMasterId=@item.DamageMasterId" title="Details"><i class="glyphicon glyphicon-new-window"></i></a>

                                                }
                                            </td>
                                            <td>
                                                @if (item.StatusId == EnumDamageStatus.Draft || item.StatusId == EnumDamageStatus.Submitted)
                                                {
                                                    <a id="@item.DamageMasterId" onclick="makeSubmitble(@item.DamageMasterId)" class="linkPointer" data-toggle="modal" data-target="#submitDepoDamageModal" title="@statusTitle" data-placement="top">
                                                        @if (item.StatusId == EnumDamageStatus.Submitted)
                                                        {
                                                            <i>Undo Submit</i>
                                                        }
                                                        else
                                                        {
                                                            <i>Submit</i>
                                                        }
                                                    </a>
                                                }
                                                @if (item.StatusId == EnumDamageStatus.Received)
                                                {
                                                    <span class="border:1px solid;border-color:#006400;"><i style="color:#006400;">Received</i></span>
                                                }

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("DamageMasterEditDepo", "Damage", FormMethod.Post, new { id = "depoDamageEditForm", @class = "formValidator" }))
{
    <div class="modal fade" id="editDamageMasterModalDepo" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h4 class="modal-title"><b>Edit Depo Damage(<span id="SOCIdText"></span>)</b></h4>
                </div>

                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.DamageMasterId, new { id = "hidEditDamageMasterId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "DMEditActionId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "DMEditCompanyFK" })
                    <span hidden="hidden" id="hiddenToStockInfo"></span>
                    <span hidden="hidden" id="hiddenFromDepoId"></span>

                    <div class="row">
                        <div class="col-md-3">
                            <label for="message-text" class="col-form-label">Date :</label>
                            <div class="form-group">
                                <input name="OperationDate" asp-for="OperationDate" type="datetime" value="@DateTime.Now.ToString("dd/MM/yyyy")" required="required" class="datepicker" placeholder="Operation Date" autocomplete="off" id="txtOperationDate">
                                @Html.ValidationMessageFor(model => model.OperationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Zone:</label>
                                @Html.DropDownListFor(model => model.ZoneFk, Model.ZoneList as SelectList, "==Select Zone==", new { id = "ddlZoneFk", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.ZoneFk, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>From Deport:</label>
                                @Html.DropDownListFor(model => model.FromDeportId, Model.CustomerList as SelectList, "==Select Customer==", new { id = "ddlToDeportId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.FromDeportId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3 " id="wareHouseId">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">To Warehouse:</label>
                                @Html.DropDownListFor(model => model.ToStockInfoId, new SelectList(Model.StockInfos, "Value", "Text"), "---Select---", new {id="ddlStockInfoId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.ToStockInfoId, "", new { @class = "text-danger" })
                            </div>
                        </div>



                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="txtDescription" class="col-form-label">Remarks:</label>
                                @Html.TextAreaFor(model => model.Remarks, new { id = "txtDescription", placeholder = "Description", @class = "form-control", rows = 2 })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <div class="col-md-8">
                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                    <div class="col-md-4">
                        <button type="submit" style="width:100%" id="btnsave" class="btn btn-primary"><i class="fa fa-floppy-o"></i>&nbsp;Update</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@using (Html.BeginForm("DeleteDamageMasterByIdDepo", "Damage", FormMethod.Post))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="deletedepoDamageModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete item</b></h5>
                </div>

                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.DamageMasterId, new { id = "hidDeleteDamageMasterId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "SOdeleteCompanyFK" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this item?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetDamageEditForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@using (Html.BeginForm("SubmitDamageMasterDepo", "Damage", FormMethod.Post))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitDepoDamageModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span class="submitOrDraftText"></span> Damage (<span id="submitOrDraftSOCIdText"></span>)</b></h5>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.DamageMasterId, new { id = "hidSubmitDamageMasterId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "SOSubmitCompanyFK" })


                    <div style="text-align:center">
                        <h3>Are you sure to <span class="submitOrDraftText"></span> this item?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetDamageEditForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnSave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp;<span class="submitOrDraftText"></span></button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {

    <script type="text/javascript">

        $('.datepicker').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: 'both',
            buttonText: "<i class='fa fa-calendar'></i>",
            changeMonth: true,
            changeYear: true,
            yearRange: "2001:+50"
        });

      $(document).ready(function () {
          /*$("#ddlZoneFk").change(updateDropdowns);*/
      });

        function resetForm() {

            $('#depoDamageEditForm')[0].reset();
                $('#DMEditActionId').val(1);
        }

        function makeCloseable(rowId, actionId) {

            $('#hidcloseReopenSaleOrderId').val(rowId);
            $('#hidcloseReopenActionId').val(actionId);

            if (actionId == "@((int)ActionEnum.Close)") {
                $('.closeReopenText').text("Close");
            }
            if (actionId == "@((int)ActionEnum.ReOpen)") {
                $('.closeReopenText').text("Reopen");
            }
        }

        function makeSubmitble(rowId) {

                $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDamageMasterByIdDepo", "Damage")",
                        datatype: "Json",
                        data: { damageMasterId: rowId },
                    success: function (data) {

                            if (data.Status == 0) {
                                $('.submitOrDraftText').text("Make Submit");
                            }
                            else {
                                $('.submitOrDraftText').text("Make Draft");
                            }
                        }
                 });
                $('#hidSubmitDamageMasterId').val(rowId);
            }

        function makeDeletale(rowId) {

            $('#hidDeleteDamageMasterId').val(rowId);
                $('#deleteActionId').val(3);
        }

        function resetDamageEditForm() {

            $('#depoDamageEditForm')[0].reset();
              $('#ActionId').val(1);
        }

        function DateCustom(orderDate) {

            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }

            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }

        function makeEditble(rowId) {
            $("#ddlDealerId").empty();
            $("#ddlFromCustomerId").empty();
                 $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDamageMasterByIdDepo", "Damage")",
                        datatype: "Json",
                        data: { damageMasterId: rowId },
                     success: function (data) {

                         $("#hidEditDamageMasterId").val(data.DamageMasterId);
                         $('#DMEditActionId').val(2);
                         $("#DMEditCompanyFK").val(data.CompanyFK);
                         var operationDate = DateCustom(data.OperationDate);
                         $('#txtOperationDate').val(operationDate);
                         $('#ddlZoneFk').val(data.ZoneFk).trigger('change');
                         $('#ddlToDeportId').val(data.FromDeportId);
                         $('#ddlStockInfoId').val(data.ToStockInfoId).trigger('change');
                         $('#txtDescription').text(data.Remarks);

                         $('#hiddenFromDepoId').val(data.FromDeportId);

                         //$("#ddlZoneFk").change(updateDropdowns);
                         updateDropdowns();
                     }
                 });
        }

        $("#ddlZoneFk").change(updateDropdowns);

        function updateDropdowns() {
               var zoneFk = 0;

            var deportId = $('#hiddenFromDepoId').val();

            zoneFk = $("#ddlZoneFk").val();

            if (zoneFk > 0) {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDeportLisByZoneId", "Procurement")",
                    datatype: "Json",
                    data: { zoneId: zoneFk },
                    success: function (data) {

                        if (data) {
                            $("#ddlToDeportId").empty();
                            $("#ddlToDeportId").append("<option value=''>==Select Deport==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlToDeportId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                        if (deportId > 0) {
                            $("#ddlToDeportId").val(deportId);
                        }
                    }
                });

                
            }

        }

    </script>
}

