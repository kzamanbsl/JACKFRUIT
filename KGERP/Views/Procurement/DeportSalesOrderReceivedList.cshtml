@model KGERP.Service.Implementation.Procurement.VMSalesOrder
@using KGERP.Utility;

@{
    ViewData["Title"] = "Deport SO Received List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        <span>
            Deport Sales Receive List
        </span>

    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">
            @*<a href="~/Procurement/DeportSalesOrderSlave?companyId=@Model.CompanyFK&orderMasterId=0" class="btn btn-primary pull-right">
                <span class="fs fs-plus"></span> New Sales Invoice
            </a>*@
        </li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-danger">
                    <div class="box-body">
                        @using (Html.BeginForm("DeportSalesOrderReceivedSearch", "Procurement", FormMethod.Post, new { id = "deportSalesOrderReceivedListFormId", @class = "formValidator" }))
                        {
                            @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyId" })

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("Status:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.DropDownListFor(model => model.Status, Model.EnumStatusList as SelectList, "==Select Status==", new { id = "ddlStatusEnumFK", @class = "form-control ddlReset searchingDropdown", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("From Date:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.StrFromDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("To Date:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.StrToDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3" style="padding: 0px 2px 0px 8px;">
                                    <div class="form-group">
                                        <label>&nbsp;</label>
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block">Show</button>
                                    </div>
                                </div>
                            </div>
                        }

                        <hr />

                        <div class="table-responsive">
                            <table id="KgErpDataTable" class="table table-striped" style="width:100%; background-color:#ddd;">
                                <thead>
                                    <tr>
                                        <th>SL</th>
                                        <th>Sales No</th>
                                        <th>Order Date</th>
                                        <th>Sales From</th>
                                        <th>To Deport</th>
                                        <th>Delivery Date</th>
                                        <th>Payment Method</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                        <th>Print</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DataList)
                                    {
                                        #region Link Title

                                        string statusTitle = "";

                                        if (item.Status == (int)EnumSOStatus.Draft)
                                        { statusTitle = "Make Submit"; }

                                        if (item.Status == (int)EnumSOStatus.Submitted)
                                        { statusTitle = "Undo Submit"; }

                                        #endregion

                                        <tr>
                                            <th>@(++sl)</th>
                                            <td>@item.OrderNo</td>
                                            <td>@item.OrderDate.ToString("dd-MM-yyyy")</td>
                                            <td>@item.StockInfoName</td>
                                            <td>@item.CommonCustomerName</td>
                                            <td>
                                                @if (item.ExpectedDeliveryDate != null)
                                                {<span>@item.ExpectedDeliveryDate.Value.ToString("dd-MM-yyyy")</span>}
                                            </td>
                                            <td>@item.POPaymentMethodName</td>
                                            <td>@item.EnumStatusName</td>
                                            <td>
                                                @if (item.Status == (int)EnumSOStatus.Draft || item.Status == (int)EnumSOStatus.Submitted)
                                                {
                                                    <a href="#" target="_blank" id="@item.OrderMasterId" onclick=" makeEditble(@item.OrderMasterId)" class="linkPointer" data-toggle="modal" data-target="#editSOMasterModal" title="Edit Master" data-placement="top"><i class="fa fa-edit" aria-hidden="true"></i></a>
                                                    <a href="#" target="_blank" id="@item.OrderMasterId" onclick="makeDeletale(@item.OrderMasterId)" class="linkPointer" data-toggle="modal" data-target="#deleteDeportOrderModal" title="Delete" data-placement="top"><i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                                                }
                                                <a target="_blank" href="~/Procurement/DeportSalesOrderReceivedSlave?companyId=@item.CompanyFK&orderMasterId=@item.OrderMasterId" title="Details"><i class="glyphicon glyphicon-new-window"></i></a>
                                            </td>
                                            <td>
                                                @if (item.Status >= (int)EnumSOStatus.Submitted)
                                                {
                                                    <a class="btn btn-sm btn-xs btn-warning linkPointer" style="width:100%;" target="_blank" href="~/Report/DeportSalesInvoiceReport?companyId=@Model.CompanyFK&orderMasterId=@item.OrderMasterId&reportName=SalesInvoiceReport">
                                                        <i class="fa fa-print"></i>Print
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span>Print</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("DeportOrderMasterEdit", "Procurement", FormMethod.Post))
{
    <div class="modal fade" id="editSOMasterModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h4 class="modal-title"><b>Sales Order Master Edit (<span id="SOCIdText"></span>)</b></h4>
                </div>

                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.OrderMasterId, new { id = "hidOrderMasterId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "SOEditActionId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "SOEditCompanyFK" })

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Invoice Date:</label>
                                <input name="OrderDate" asp-for="OrderDate" type="text" required="required" class="datePicker form-control" id="txtOrderDate" placeholder="Invoice Date" autocomplete="off">
                                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Payment Method:</label>
                                @Html.DropDownListFor(model => model.CustomerPaymentMethodEnumFK, Model.POPaymentMethodList as SelectList, "==Payment Method==", new { id = "ddlCustomerPaymentMethodEnumFK", @class = "form-control ddlReset", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.CustomerPaymentMethodEnumFK, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Deport:</label>
                                @Html.EditorFor(model => model.CommonCustomerName, new { htmlAttributes = new { @required = "required", @autocomplete = "on", @class = "form-control", @name = "Deport Name", @id = "txtCommonCustomerName" } })
                                @Html.HiddenFor(model => model.CustomerId, new { id = "ddlCustomerId" })
                                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Delivery Date:</label>
                                <input name="ExpectedDeliveryDate" asp-for="ExpectedDeliveryDate" type="text" required="required" class="datePicker form-control" id="txtDeliveryDate" placeholder="Delivery Date" autocomplete="off">
                                @Html.ValidationMessageFor(model => model.ExpectedDeliveryDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Remarks:</label>
                                <textarea name="Remarks" asp-for="Remarks" type="text" cols="2" class="form-control" id="txtRemarks" placeholder="Description" autocomplete="off"></textarea>
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <div class="col-md-8">
                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                    <div class="col-md-4">
                        <button type="submit" style="width:100%" id="btnsave" class="btn btn-primary"><i class="fa fa-floppy-o"></i>&nbsp;Update</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@using (Html.BeginForm("DeleteDeportOrderMaster", "Procurement", FormMethod.Post))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="deleteDeportOrderModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Sales Order</b></h5>
                </div>

                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.OrderMasterId, new { id = "hidDeportSalesOrderId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "POdeleteCompanyFK" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this Sales Order?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetDeportSalesOrderForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@using (Html.BeginForm("SubmitDeportOrderMaster", "Procurement", FormMethod.Post))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitDeportOrderModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span class="submitOrDraftText"></span> Sales Order (<span id="submitOrDraftSOCIdText"></span>)</b></h5>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.OrderMasterId, new { id = "hidSubmitDeportSalesOrderId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "SOSubmitCompanyFK" })


                    <div style="text-align:center">
                        <h3>Are you sure to <span class="submitOrDraftText"></span> this Sales Order?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetDeportSalesOrderForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnSave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp;<span class="submitOrDraftText"></span></button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {

    <script type="text/javascript">

        $('.datepicker').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: 'both',
            buttonText: "<i class='fa fa-calendar'></i>",
            changeMonth: true,
            changeYear: true,
            yearRange: "2001:+50"
        });

        function resetForm() {

                $('#deportSalesOrderReceivedListFormId')[0].reset();
                $('#SOEditActionId').val(1);
        }

            $("#txtCommonCustomerName").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url:"@Url.Action("GetAutoCompleteDeport", "Procurement")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { prefix: request.term, companyId: "@Model.CompanyFK" },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                           response($.map(data, function (item) {
                               return item;
                           }))
                        },
                        error: function (response) {
                           //alert(response.responseText);
                        },
                        failure: function (response) {
                           //alert(response.responseText);
                        }
                    });
                },

                select: function (e, i) {
                    $("#ddlCustomerId").val(i.item.val);

                },
                minLength: 1,
                cache: true,

                // Those line for show on modal other wise no need
                autoFocus: true,
                appendTo: "#editSOMasterModal"

            }).focus(function () {
                $(this).autocomplete("search");
            });

        function makeCloseable(rowId, actionId) {

            $('#hidcloseReopenSalesOrderId').val(rowId);

              $('#hidcloseReopenActionId').val(actionId);
            if (actionId == "@((int)ActionEnum.Close)") {
                $('.closeReopenText').text("Close");
            }
            if (actionId == "@((int)ActionEnum.ReOpen)") {
                $('.closeReopenText').text("Reopen");
            }
        }

        function makeSubmitble(rowId) {

                $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDeportOrderMasterById", "Procurement")",
                        datatype: "Json",
                        data: { orderMasterId: rowId },
                        success: function (data) {
                            $('#submitOrDraftSOCIdText').text(data.OrderNo);

                            if (data.Status == 0) {
                                $('.submitOrDraftText').text("Make Submit");
                            }
                            else {
                                $('.submitOrDraftText').text("Make Draft");
                            }
                        }
                 });
                $('#hidSubmitDeportSalesOrderId').val(rowId);
            }

        function makeDeletale(rowId) {

                $('#hidDeportSalesOrderId').val(rowId);
                $('#deleteActionId').val(3);
        }

        function resetDeportSalesOrderForm() {

              $('#salesOrderListFormId')[0].reset();
              $('#ActionId').val(1);
        }

        function DateCustom(orderDate) {

            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }

            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }

        function makeEditble(rowId) {

                 $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDeportOrderMasterById", "Procurement")",
                        datatype: "Json",
                        data: { orderMasterId: rowId },
                        success: function (data) {

                            $('#SOCIdText').text(data.OrderNo);
                            $("#hidOrderMasterId").val(data.OrderMasterId);
                            $('#SOEditActionId').val(2);
                            $("#SOEditCompanyFK").val(data.CompanyFK);

                            var orderDate = DateCustom(data.OrderDate);
                            $('#txtOrderDate').val(orderDate);

                            $('#ddlCustomerPaymentMethodEnumFK').val(data.CustomerPaymentMethodEnumFK).change();
                            $('#txtCommonCustomerName').val(data.CommonCustomerName);

                            var deliveryDate = DateCustom(data.ExpectedDeliveryDate);
                            $('#txtDeliveryDate').val(deliveryDate);

                            $('#ddlCustomerId').val(data.CustomerId);
                            $('#txtRemarks').val(data.Remarks);

                        }
                 });
            }

    </script>
}

