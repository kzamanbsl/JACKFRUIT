@model KGERP.Data.CustomModel.ReportCustomModel
<div class="row">
    <div class="col-md-12" style="background-color:lightblue">
        @Html.Label("Deport Damage Stock Report", new { @style = "font-size:20px" })
    </div>
</div>
<br />

@using (Html.BeginForm("DeportDamageStockReport", "Report", FormMethod.Post, new { @id = "idForm" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CompanyId, new { @id = "hfCompanyId" })
    <div class="row">

        <div class="col-md-3">
            @Html.Label("From Date:", htmlAttributes: new { @class = "control-label" })
            <br />
            <div style="display:flex">
                @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off", @style = "width: 100%;" } })
            </div>
            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3">
            @Html.Label("To Date:", htmlAttributes: new { @class = "control-label" })
            <br />
            <div style="display:flex">
                @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off", @style = "width: 100%;" } })
            </div>
            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label>Zone:</label>
                @Html.DropDownListFor(model => model.ZoneId, Model.SelectZoneList as SelectList, "==Select Zone==", new { id = "ddlZoneFk", @class = "form-control searchingDropdown", style = "width:100%" })
                @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label>Deport:</label>
                @Html.DropDownListFor(model => model.DeportId, Model.DeportList as SelectList, "==Select Deport==", new { id = "ddlDeportId", @class = "form-control searchingDropdown", style = "width:100%" })
                @Html.ValidationMessageFor(model => model.DeportId, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Category:</label>
                <br />
                @Html.DropDownListFor(model => model.ProductCategoryId, new SelectList(Model.ProductCategoryList, "Value", "Text"), new { id = "ddlCommon_ProductCategoryFk", @class = "searchingDropdown  customStyle", @style = "width: 100%;" })
                @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Subcategory:</label>
                <br />
                @Html.DropDownListFor(model => model.ProductSubCategoryId, Model.ProductSubCategoryList as SelectList, "== Select Subcategory ==", new { id = "ddlCommonProductSubCategoryFk", @class = "searchingDropdown  customStyle", @style = "width: 100%;" })
                @Html.ValidationMessageFor(model => model.ProductSubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Product:</label>
                <br />
                @Html.DropDownListFor(model => model.ProductId, Model.ProductList as SelectList, "== Select Product ==", new { id = "ddlCommonProductFk", @class = "searchingDropdown  customStyle", @style = "width: 100%;" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3" style="margin-top:24px;float:left;display:flex">
            <select class="pull-right" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px;width:50%" name="ReportType" id="ReportType">
                <option value="PDF">PDF</option>
                <option value="EXCEL">EXCEL</option>
                <option value="WORD">WORD</option>
            </select>
            <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-right" formtarget="_blank" style="width:50%" />
            @*<input type="submit" style="margin-top:20px" formtarget="_blank" value="Report" class="btn btn-success" />*@
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                dateFormat: "mm/dd/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });

        $("#ddlZoneFk").change(function () {

        var zoneFk = $("#ddlZoneFk").val();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetDeportLisByZoneId", "Procurement")",
            datatype: "Json",
            data: { zoneId: zoneFk },
            success: function (data) {

                if (data) {
                    $("#ddlDeportId").empty();
                    $("#ddlDeportId").append("<option value=''>==Select Deport==</option>");
                    $(data).each(function (index, item) {
                        $("#ddlDeportId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });

                }
            }
        });
    });


        $("#ddlCommon_ProductCategoryFk").change(function () {

            var productCategoryFk = $("#ddlCommon_ProductCategoryFk").val();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCommonProductSubCategory", "WareHouse")",
                datatype: "Json",
                data: { id: productCategoryFk },
                success: function (data) {
                    var items = "";
                    if (data) {
                        $("#ddlCommonProductSubCategoryFk").empty();
                        $("#ddlCommonProductSubCategoryFk").append("<option value=''>==Select Subcategory==</option>");
                        $(data).each(function (index, item) {
                            $("#ddlCommonProductSubCategoryFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                        });

                    }
                }
            });
        });


        $("#ddlCommonProductSubCategoryFk").change(function () {

            var productSubCategoryFk = $("#ddlCommonProductSubCategoryFk").val();
            if (productSubCategoryFk != (null | 0))
            {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetCommonProduct", "WareHouse")",
                    datatype: "Json",
                    data: { id: productSubCategoryFk },
                    success: function (data) {
                        var items = "";
                        if (data) {
                            $("#ddlCommonProductFk").empty();
                            $("#ddlCommonProductFk").append("<option value=''>==Select Item==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommonProductFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
            }
        });

    </script>
}





