@model KGERP.Service.ServiceModel.UserModel
@using KGERP.Utility;
@{
    ViewData["Title"] = "User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        User
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">User</li>
    </ol>
</section>

@using (Html.BeginForm("Registration", "User", FormMethod.Post, new { id = "commonUserFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IsEmailVerified, new { id = "IsEmailVerified", Value = true })
                @Html.HiddenFor(model => model.ActivationCode, new { id = "IsEmailVerified", Value = "" })
                <div class="box-danger">
                    @*<div class="box-header">
                            <h4>Add Unit</h4>
                        </div>*@
                    <!-- /.box-header -->
                    <div class="box-body">
                        @Html.HiddenFor(model => model.UserId, new { Value = @Model.UserId, id = "userId" })
                        @*@Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionId" })*@
                        @*@Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })*@

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">User Type:</label>
                                    @Html.DropDownListFor(model => model.UserTypeId, Model.EnumUserTypeList as SelectList, "==Select Type==", new { id = "ddlUserTypeId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                    @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group" id="deportDivId" style="display:none;">
                                    <label>Deport:</label>
                                    @Html.DropDownListFor(model => model.DeportId, Model.CustomerList as SelectList, "==Select Deport==", new { id = "ddlDeportId", @class = "form-control searchingDropdown", style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.DeportId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group" id="dealerDivId" style="display:none;">
                                    <label>Dealer:</label>
                                    @Html.DropDownListFor(model => model.DealerId, Model.CustomerList as SelectList, "==Select Dealer==", new { id = "ddlDealerId", @class = "form-control searchingDropdown", style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.DealerId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">Name:</label>
                                    @Html.TextBoxFor(model => model.EmployeeName, new { id = "txtEmployeeName", @class = "form-control", @placeholder = "Name", required = "true", })
                                    @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">Mobile No:</label>
                                    @Html.TextBoxFor(model => model.MobileNo, new { id = "txtMobileNo", @class = "form-control", @placeholder = "Mobile No" })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">Email:</label>
                                    @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control", @placeholder = "email" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">User Name:</label>
                                    @Html.TextBoxFor(model => model.UserName, new {id = "txtUserName",@class = "form-control",@placeholder = "User Name", required = "true",})
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">Password:</label>
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "password", required = "true" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-control-label">Confirm Password:</label>
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "confirm password", required = "true" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                            </div>
                            <div class="col-md-9">
                                <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>
                            </div>
                        </div>
                    </div>

                    <div class="box-footer">
                        @if (ViewBag.Message != null)
                        {
                            <div class="alert alert-success">
                                <strong>Success! </strong> @ViewBag.Message
                            </div>
                        }
                        @if (ViewBag.Error != null)
                        {
                            <div class="alert alert-danger">
                                <strong>Error! </strong> @ViewBag.Error
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="box">

                    <div class="box-danger">
                        <!--<div class="box-header">-->
                        @*<h4>Unit List</h4>*@
                        <!--</div>-->
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive col-md-12">
                                <table id="KgErpDataTable" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>SL</th>
                                            <th hidden="hidden">UserId</th>
                                            <th>Name</th>
                                            <th>User Name</th>
                                            <th>Mobile No</th>
                                            <th>Email</th>
                                            <th>User Type</th>
                                            <th>Active</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    @{int sl = 0;
                                    }
                                    <tbody>
                                        @foreach (var item in Model.DataList)
                                        {
                                            <tr>
                                                <td>
                                                    @(++sl)
                                                </td>
                                                <td hidden="hidden" id="tdUserId_@item.UserId">@item.UserId</td>
                                                <td id="tdEmployeeName_@item.UserId">@item.EmployeeName</td>
                                                <td id="tdUserName_@item.UserId">@item.UserName</td>
                                                <td id="tdMobileNo_@item.UserId">@item.MobileNo</td>
                                                <td id="tdEmail_@item.UserId">@item.Email</td>
                                                <td id="tdUserType_@item.UserTypeId">@item.UserTypeName</td>
                                                <td id="tdActive_@item.UserId"> @item.Active</td>
                                                <td>
                                                    @if(Model.UserDataAccessModel.IsAdmin)
                                                    {
                                                        @*<a onclick="makeEditble(@item);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>*@
                                                        if (item.Active)
                                                        {
                                                            <a id="@item.UserId" onclick="makeDisabled(@item.UserId);" class="linkPointer" data-toggle="modal" data-target="#userDisableModal" title="Make Inactive"
                                                               data-placement="top">
                                                                <i class="glyphicon glyphicon-ok" aria-hidden="true"></i>
                                                            </a>
                                                        }
                                                        else
                                                        {
                                                            <a id="@item.UserId" onclick="makeDisabled(@item.UserId);" class="linkPointer" data-toggle="modal" data-target="#userDisableModal" title="Make Active"
                                                               data-placement="top">
                                                                <i class="glyphicon glyphicon-remove" aria-hidden="true"></i>
                                                            </a>
                                                        }
                                                        <span>&nbsp;</span>
                                                        <a id="@item.UserId" onclick="makeChangePassword(@item.UserId);" class="linkPointer" data-toggle="modal" data-target="#userChangePasswordModal" title="Change Password"
                                                           data-placement="top">
                                                            <i class="glyphicon glyphicon-edit" aria-hidden="true"></i>
                                                        </a>
                                                    }

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                        <div class="box-footer">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@using (Html.BeginForm("InactiveUser", "User", FormMethod.Post, new { id = "commonUserFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.UserId, new { Value = "", id = "userIdInactive" })
    @*@Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })*@

    <div class="modal fade" id="userDisableModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>User Inactive</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to Inactive User?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("ChangeUserPassword", "User", FormMethod.Post, new { id = "commonUserFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.UserId, new { Value = "", id = "userIdChangePassword" })
    @*@Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })*@

    <div class="modal fade" id="userChangePasswordModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Change User Password</b></h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "password", required = "true" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "confirm password", required = "true" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}


@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
        });

        $("#ddlUserTypeId").change(function () {

            var userTypeId = $("#ddlUserTypeId").val();

            var deport = @((int)EnumUserType.Deport);
            var dealer = @((int)EnumUserType.Dealer);
            var managment = @((int)EnumUserType.Management);

            if (Number(userTypeId) == deport) {

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDeportLisByZoneId", "Procurement")",
                    datatype: "Json",
                    data: { zoneId: 0 },
                    success: function (data) {
                        if (data) {
                            $("#ddlDeportId").empty();
                            $("#ddlDeportId").append("<option value=''>==Select Deport==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlDeportId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });
                        }
                    }
                });

                document.getElementById('deportDivId').style.display = 'block';
                document.getElementById('dealerDivId').style.display = 'none';
            }
            else if (Number(userTypeId) == dealer) {

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDealerLisByZoneId", "Procurement")",
                    datatype: "Json",
                    data: { zoneId: 0 },
                    success: function (data) {
                        if (data) {
                            $("#ddlDealerId").empty();
                            $("#ddlDealerId").append("<option value=''>==Select Dealer==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlDealerId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });

                document.getElementById('deportDivId').style.display = 'none';
                document.getElementById('dealerDivId').style.display = 'block';
            } else {
                $("#ddlDeportId").empty();
                $("#ddlDealerId").empty();
                document.getElementById('deportDivId').style.display = 'none';
                document.getElementById('dealerDivId').style.display = 'none';
            }

        });

        $("#ddlDeportId").change(function () {
            var deportId = $("#ddlDeportId").val();

            $.ajax({
                type: "GET",
                url: "@Url.Action("CommonDeportByIdGet", "Configuration")",
                datatype: "Json",
                data: { id: deportId },
                success: function (data) {
                    if (data) {
                        $("#txtEmployeeName").val(data.Name);
                        $("#txtMobileNo").val(data.Email);
                        $("#txtEmail").val(data.Phone);
                    }
                }
            });
        });

        $("#ddlDealerId").change(function () {
            var dealerId = $("#ddlDealerId").val();

            $.ajax({
                type: "GET",
                url: "@Url.Action("CommonDealerByIdGet", "Configuration")",
                datatype: "Json",
                data: { id: dealerId },
                success: function (data) {
                    if (data) {
                        $("#txtEmployeeName").val(data.Name);
                        $("#txtMobileNo").val(data.Email);
                        $("#txtEmail").val(data.Phone);
                    }
                }
            });
        });

        function makeEditble(obj) {
            if (obj !== null) {
                var rowId = obj.UserId;
                $('#userId').val(rowId);
                $('#txtEmployeeName').val(obj.EmployeeName);
                $('#txtUserName').val(obj.UserName);
                $('#txtMobileNo').val(obj.MobileNo);
                $('#txtEmail').val(obj.Email);
                $('#txt').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                // $('#txtUserName').val($('#tdUnitName_' + rowId).text().trim());
                window.scrollTo({ top: 0, behavior: 'smooth' });

            }
        };

        function makeDisabled(id) {
            if (id !== null) {
                $('#userIdInactive').val(id);
                //$('#ActionIdDelete').val(3);
            }
        };

        function makeChangePassword(id) {
            if (id !== null) {
                $('#userIdChangePassword').val(id);
                //$('#ActionIdDelete').val(3);
            }
        };

        function resetForm() {
            $('#commonUserFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        };

    </script>
}

